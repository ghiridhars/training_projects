package com.mindtree.student.service;

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mindtree.student.dto.StudentDto;
import com.mindtree.student.entity.Student;
import com.mindtree.student.exception.StudentException;
import com.mindtree.student.repository.StudentRepo;

@Service
public class StudentServiceImpl implements StudentService {

	@Autowired
	StudentRepo studentRepo;

	ModelMapper mapper = new ModelMapper();

	@Override
	public StudentDto addStudent(StudentDto sDto) throws StudentException {

		Student s = mapper.map(sDto, Student.class);
		try {
			studentRepo.save(s);
		} catch (Exception e) {
			e.printStackTrace();
			throw new StudentException(e.getMessage(), e);
		}
		return mapper.map(s, StudentDto.class);
	}

	@Override
	public List<StudentDto> getAllStudents() throws StudentException {

		List<Student> sList = studentRepo.findAll();

		return sList.stream().map(x -> mapper.map(x, StudentDto.class)).collect(Collectors.toList());

	}

	@Override
	public List<StudentDto> getStudentsByName(String name) throws StudentException {
		List<Student> sList = studentRepo.findByClass(name);
		return sList.stream().map(x -> mapper.map(x, StudentDto.class)).collect(Collectors.toList());
	}

	@Override
	public Set<String> getAllClasses() throws StudentException {
		List<StudentDto> sList = getAllStudents();
		Set<String> classes = new HashSet<>(sList.stream().map(x -> x.getClassName()).collect(Collectors.toList())); 
		return classes;
	}

	@Override
	public StudentDto getStudentByName(String sName) throws StudentException {
		System.out.println(studentRepo.findByName(sName));
		StudentDto sDto = mapper.map(studentRepo.findByName(sName), StudentDto.class); 
		return sDto;
	}

}
