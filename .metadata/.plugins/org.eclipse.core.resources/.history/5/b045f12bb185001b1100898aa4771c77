package com.mindtree.personCountryApp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
@EnableWebSecurity
public class AppSecurityConfiguration extends WebSecurityConfigurerAdapter {

	@Autowired
	UserDetailsService userdetails;
	
	@Override
	protected void configure(AuthenticationManagerBuilder amb) throws Exception {
		amb.inMemoryAuthentication().withUser("giri").password("user").roles("USER").and().withUser("admin")
				.password("admin").roles("ADMIN", "USER");
		
//		amb.userDetailsService(userdetails);
	}

	@Override
	protected void configure(HttpSecurity http) throws Exception {
	    http
	      .authorizeRequests()
	      .antMatchers("/country/*").hasRole("ADMIN")
	      .antMatchers("/person/*").hasAnyRole("ADMIN","USER")
	      .antMatchers("/").permitAll()
	      .and().formLogin()
	      .failureUrl("/login?error")
	      .defaultSuccessUrl("/");
	    }
	
	@Bean
	public PasswordEncoder getPasswordEncoder() {
		return NoOpPasswordEncoder.getInstance();
	}
}
